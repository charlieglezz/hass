homeassistant:
  # Name of the location where Home Assistant is running
  name: Casa
  # Location required to calculate the time the sun rises and sets
  latitude: 22.772994
  longitude: -102.549091
  # Impacts weather/sunrise data (altitude above sea level in meters)
  elevation: 2848
  # metric for Metric, imperial for Imperial
  unit_system: metric
  # Pick yours from here: http://en.wikipedia.org/wiki/List_of_tz_database_time_zones
  time_zone: America/Mexico_City

# ZONAS
zone:
  - name: Trabajo
    latitude: 22.943378
    longitude: -102.715660
    radius: 50
    icon: mdi:briefcase
# Show links to resources in log and frontend
introduction:

# Enables the frontend
frontend:

# Enables configuration UI
config:

http:
  # Uncomment this to add a password (recommended!)
    api_password: 123qwe

# Checks for available updates
# Note: This component will send some information about your system to
# the developers to assist with development of Home Assistant.
# For more information, please see:
# https://home-assistant.io/blog/2016/10/25/explaining-the-updater/
updater:
  # Optional, allows Home Assistant developers to focus on popular components.
  # include_used_components: true

# Discover some devices automatically
discovery:

# Allows you to issue voice commands from the frontend in enabled browsers
conversation:

# Enables support for tracking state changes over time.
history:

# View all events in a logbook
logbook:

# Track the sun
sun:

# Weather Prediction
sensor:
  - platform: template
    sensors:
      day_night:
        friendly_name: "Dia/Noche"
        icon_template: mdi:weather-sunny
        #  {% if is_state('sun.sun', 'above_horizon') %}
        #    mdi:weather-sunny
        #  {% else %}
        #    mdi:weather-night
        #  {% endif %}
        value_template: >-
          {% if is_state('sun.sun', 'above_horizon') %}
            Dia
          {% else %}
            Noche
          {% endif %}
      transmission_down_speed_kbps:
        friendly_name: "Velocidad de descarga"
        unit_of_measurement: 'kB/s'
        value_template: "{{ states('sensor.transmission_down_speed_kbps')|float * 1024 }}"
      transmission_up_speed_kbps:
        friendly_name: "Velocidad de carga"
        unit_of_measurement: 'kB/s'
        value_template: "{{ states('sensor.transmission_up_speed_kbps')|float * 1024 }}"
      sun_state:
        friendly_name: "Sun State"
        value_template: >-
          {% if is_state('sun.sun', 'above_horizon') %}
            up
          {% else %}
            down
          {% endif %}
      solar_angle:
        friendly_name: "Angulo solar"
        unit_of_measurement: '°'
        value_template: "{{ '%+.1f'|format(states.sun.sun.attributes.elevation) }}"
      sunrise:
        value_template: "{{ states.sun.sun.attributes.next_rising }}"
      battery_rgb:
        friendly_name: "Bateria de rgb"
        entity_id: sensor.rgb_battery_state #device_tracker.rgb
        unit_of_measurement: '%'
        value_template: >-
          {% if states.device_tracker.rgb.attributes.battery %}
            {{ states.device_tracker.rgb.attributes.battery|round }}
          {% else %}
            {{ states.sensor.battery_rgb.state }}
          {% endif %}
        icon_template: >-
          {% set nivel = states.device_tracker.rgb.attributes.battery %}
          {% set battery_round = (nivel / 10) |int * 10 %}
          {% if battery_round == 100 %}
            mdi:battery
          {% elif battery_round > 0 %}
            mdi:battery-{{ battery_round }}
          {% else %}
            mdi:battery-alert
          {% endif %}


# Text to speech
tts:
  platform: google

group: !include groups.yaml
automation: !include automations.yaml

# Configuración para descubrimiento de dispositivos ios con la api_password
# instalada y configurada.
ios:
